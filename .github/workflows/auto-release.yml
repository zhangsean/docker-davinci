#=================================================
# https://github.com/zhangsean/docker-davinci
# Description: Auto check latest davinci release and tag docker image zhangsean/davinci using GitHub Actions
# License: Apache V2.0
# Author: ZhangSean
#=================================================

name: Follow up davinci release

on:
  schedule:
    - cron: 1 0 * * *
  watch:
    types: [started]
    if: github.event.repository.owner.id == github.event.sender.id
  push:
    paths:
      - '.github/workflows/*.yml'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Check new release
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y jq
          git fetch --tags
          export CURRENT=$(git tag --sort=creatordate | tail -n 1)
          echo "CURRENT=$CURRENT"
          export RELEASE_URL=https://api.github.com/repos/edp963/davinci/releases
          export LATEST=$(curl -s $RELEASE_URL | jq -r .[0].tag_name)
          echo "LATEST=$LATEST"
          if [ "$LATEST" != "$CURRENT" ]; then
            echo "New release: $LATEST"
            export LATEST_ASSET=`curl -s $RELEASE_URL | jq -r .[0].assets[0].browser_download_url`
            if [ -e "$LATEST_ASSET" ]; then
              echo "No asset in release: $LATEST"
            else
              echo "CURRENT=$CURRENT" >> $GITHUB_ENV
              echo "LATEST=$LATEST" >> $GITHUB_ENV
              echo "LATEST_ASSET=$LATEST_ASSET" >> $GITHUB_ENV
              echo "Release asset: $LATEST_ASSET"
            fi
          else
            echo "No new released"
            echo "LATEST=" >> $GITHUB_ENV
          fi

      - name: Bump to new tag
        if: success() && env.LATEST != ''
        env:
          DEBIAN_FRONTEND: noninteractive
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Bump to $LATEST"
          sed -i "11 a $LATEST | $LATEST-alpine" README.md
          sed -i "11 d; 10 a ARG DAVINCI_ASSET=$LATEST_ASSET" Dockerfile
          sed -i "11 d; 10 a ARG DAVINCI_ASSET=$LATEST_ASSET" alpine.Dockerfile
          git config user.email zxf2342@qq.com
          git config user.name zhangsean
          git commit -a -m "Bump to davinci $LATEST"
          git push

      - name: Create new release
        uses: actions/create-release@v1
        if: success() && env.LATEST != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST }}
          release_name: ${{ env.LATEST }}
          body: |
            Bump to davinci ${{ env.LATEST }}
          draft: false
          prerelease: false

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            zhangsean/kubectl:latest,
            zhangsean/kubectl:${{ env.LATEST }}
